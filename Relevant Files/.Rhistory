#If we adjust new graph for CO2 divided by state population below
final_dataset = final_dataset |> mutate(co2_pop = co2_emissions/labor_force)
#Create new graph.. see that there are 3 major polluters by capita in US
graph_6.0 = ggplot(data = final_dataset, aes(x = Renewables, y = co2_pop, col = state_category, label = state, group = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
geom_text(hjust=1, vjust=1.5, size = 3) +
ylab("CO2 Emissions") +
xlab("Renewable Energy %")
graph_6.0
#Adjust view on graph to see CO2 emissions and renewable energy percentage relationship in 47 states
graph_6.0.1 = ggplot(data = final_dataset, aes(x = Renewables, y = co2_pop, col = state_category, label = state, group = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
geom_text(hjust=1, vjust=1.5, size = 3) +
ylab("CO2 Emissions") +
xlab("Renewable Energy %") +ylim(0,30000) +
geom_smooth(method = "lm", se = FALSE)
graph_6.0.1
###Maps####
library(tigris)
library(tmap)
library(sf)
#Create Map showing political affiliation
states <- states(cb = TRUE)
names(states)[names(states) == "STUSPS"] <- "state"
map_1 <- left_join(final_dataset, states, by = "state")
map_1 <- st_as_sf(map_1)
final_map = map_1[-c(2), ]
final_map = final_map[-c(10), ]
affiliation_map <- tm_shape(final_map)+tm_polygons(col ="state_category", palette = c(Blue = "blue", Red = "red", Purple = "purple"), title = "Political Category")
affiliation_map
#Create map showing renewable energy percentage
energy_map = tm_shape(final_map)+tm_polygons(col ="Renewables", palette =c("Greens"), title = "Renewable Energy (%)")
energy_map
#Save dataset
save(final_dataset, file = "final_dataset.Rdata")
DATA TO SAVE
save(final_dataset, file = "final_dataset.Rdata")
save(color, file = "color.Rdata")
save(states, file = "states.Rdata")
save(map_1, file = "map_1.Rdata")
save(final_map, file = "final_map.Rdata")
save(dataset_final_new, file = "dataset_final_new.Rdata")
###Regressions####
library(estimatr)
library(fixest)
library(modelsummary)
final_dataset$GDP =  as.numeric(final_dataset$GDP)
final_dataset$avg_temp =  as.numeric(final_dataset$avg_temp)
final_dataset$Renewables =  as.numeric(final_dataset$Renewables)
final_dataset$precip =  as.numeric(dataset_final_new$precip)
final_dataset <- rename(final_dataset, rep_gov = "republican governor")
save(final_dataset, file = "final_dataset.Rdata")
library
reg_1 = feols(Renewables ~ avg_temp + GDP + precip, data = final_dataset)
summary(reg_1)
reg_2 = feols(Renewables ~ avg_temp + GDP + precip + state_category, data = final_dataset)
summary(reg_2)
reg_3 = feols(Renewables ~ avg_temp + GDP + precip + co2_pop + trump_vote * rep_gov, data = final_dataset)
summary(reg_3)
summary(reg_3) |> tidy()
reg_4 = feols(co2_pop ~ avg_temp + GDP + precip + Renewables + trump_vote * rep_gov, data = final_dataset)
summary(reg_4)
summary(reg_4) |> tidy()
etable(reg_1,reg_2)
View(final_dataset)
final_dataset_new = final_dataset[-c(11), ]
final_dataset_new = final_dataset[-c(11), ]
graph_5.0 = ggplot(data = final_dataset_new, aes(x = new_solar, y = avg_temp, col = state_category, label = state, group = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
geom_text(hjust=1, vjust=1.5, size = 3) +
ylab("Average Temperature") +
xlab("Solar Energy") + geom_smooth(method="lm", se = FALSE)
graph_5.0
final_dataset[11,6] = 70
graph_5.0 = ggplot(data = final_dataset_new, aes(x = new_solar, y = avg_temp, col = state_category, label = state, group = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
geom_text(hjust=1, vjust=1.5, size = 3) +
ylab("Average Temperature") +
xlab("Solar Energy") + geom_smooth(method="lm", se = FALSE)
graph_5.0
final_dataset[11,6] = 70
graph_5.0 = ggplot(data = final_dataset, aes(x = new_solar, y = avg_temp, col = state_category, label = state, group = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
geom_text(hjust=1, vjust=1.5, size = 3) +
ylab("Average Temperature") +
xlab("Solar Energy") + geom_smooth(method="lm", se = FALSE)
graph_5.0
load("https://github.com/NathanABush/Data-Analytics-Term-Project/blob/main/Relevant%20Files/dataset_final.Rdata")
final_dataset[11,6] = 75
#Above I added average temperature in Hawaii from NOAA since it was only missing value in my data. Not the best practice but important in this context.
graph_5.0 = ggplot(data = final_dataset, aes(x = new_solar, y = avg_temp, col = state_category, label = state, group = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
geom_text(hjust=1, vjust=1.5, size = 3) +
ylab("Average Temperature") +
xlab("Solar Energy") + geom_smooth(method="lm", se = FALSE)
graph_5.0
#Create a 5th graph
final_dataset[11,6] = 75
View(final_dataset)
#Above I added average temperature in Hawaii from NOAA since it was only missing value in my data. Not the best practice but important in this context.
graph_5.0 = ggplot(data = final_dataset, aes(x = new_solar, y = avg_temp, col = state_category, label = state, group = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
geom_text(hjust=1, vjust=1.5, size = 3) +
ylab("Average Temperature") +
xlab("Solar Energy") + geom_smooth(method="lm", se = FALSE)
###PACKAGES####
library(readxl)
library(tidyverse)
library(dplyr)
library(broom)
library(tinytex)
library(rvest)
library(tigris)
library(tmap)
library(sf)
library(estimatr)
library(fixest)
library(modelsummary)
library(ggplot2)
setwd("SET YOUR WD TO WHERE YOU DOWNLOADED THE FILES")
###PACKAGES####
library(readxl)
library(tidyverse)
library(dplyr)
library(broom)
library(tinytex)
library(rvest)
library(tigris)
library(tmap)
library(sf)
library(estimatr)
library(fixest)
library(modelsummary)
library(ggplot2)
#SET YOUR WD TO WHERE YOU DOWNLOADED THE FILES
setwd("/Users/nathanbush/Documents/GitHub/Data Analytics Term Project/Master Code")
#Will need to Change Loaction of these files below to your WD
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dataset_final_new.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/color.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/states.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/final_map.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/final_dataset.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/final_dataset.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dataset_final.Rdata")
###BARCHART####
#set variables to numeric
dataset_final$"Renewables" =  as.numeric(dataset_final$"Renewables")
hist(dataset_final$Renewables)
dataset_final$`Total Expenditures ($ million)` =  as.numeric(dataset_final$"Total Expenditures ($ million)")
hist(dataset_final$`Total Expenditures ($ million)`)
dataset_final$GDP =  as.numeric(dataset_final$GDP)
#Create separate variables for blue, red, and mixed states based on pres vote and gov
dataset_final_red = dataset_final |> filter(red_red == 1)
dataset_final_blue = dataset_final |> filter(blue_blue == 1)
dataset_final_mixed = dataset_final |> filter(blue_blue == 0 & red_red ==0)
#Take mean Renewable energy % in each of these groups
dataset_final_new = dataset_final |>
mutate(red_renewable = as.vector(mean(dataset_final_red$Renewables)))
dataset_final_new = dataset_final_new |>
mutate(blue_renewable = as.vector(mean(dataset_final_blue$Renewables)))
dataset_final_new = dataset_final_new |>
mutate(mix_renewable = as.vector(mean(dataset_final_mixed$Renewables)))
#Create Group Mean Column based upon states with 2 votes red, 2 votes blue, and 1 of each
dataset_final_new = dataset_final_new |>
mutate(group_avg = ifelse(red_red ==1, 27.78,
ifelse(blue_blue ==1, 30.30,
ifelse(blue_blue==0 & red_red ==0,22.28,0))))
#Create categorical column for barchart
dataset_final_new = dataset_final_new |>
mutate(state_category = ifelse(group_avg ==27.78, "Red",
ifelse(group_avg ==30.30, "Blue",
ifelse(group_avg==22.28, "Purple", 0))))
#Create Barplot Data
barplot_data = dataset_final_new[,-c(1:24)]
barplot_data = barplot_data[-c(1:2),]
barplot_data = barplot_data[-c(4:48),]
#Create Graph showing relationship between renewables % and states
graph_1 = ggplot(barplot_data, aes(x=state_category, y=group_avg, fill=state_category)) +
geom_bar(stat = "identity") + labs(y= "% Renewable Energy" , x = "State Category")
color <- data.frame(state_cat=c("Purple","Red","Blue"),
renew=c(22.28,27.78,30.30))
graph_1_color <- ggplot(data=color, aes(x=state_cat, y=renew,fill=state_cat))+
geom_bar(stat="identity")+
scale_fill_manual(values=c("blue",
"purple",
"red")) + labs(y= "% Renewable Energy" , x = "State Category") +
theme(legend.position = "none") + geom_col(colour = "black") +  geom_label(aes(label = renew), vjust = 1.5, colour = "black", fill = "white") +
ylim(0,33) +labs(title = "Electricity Generation by State Political Category")
graph_1_color
###Graph 2####
#Rename variables in dataset to be easier to work with
names(dataset_final_new)[names(dataset_final_new) == "Precipitation (inches)"] <- "precip"
names(dataset_final_new)[names(dataset_final_new) == "Average Temperature (degrees Fahrenheit)"] <- "avg_temp"
names(final_dataset)[names(final_dataset) == "Coal-Fired (%)"] <- "coal"
#Create a 2nd graph comparing rain and solar energy, I removed California in this graph because
#it was a significant outlier.
graph_2.1 = ggplot(data = dataset_final_new, aes(x = as.numeric(as.character(Solar)), y = as.numeric(as.character(precip)), col = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
xlim(0,100)
graph_2.1
#GRAPH 3####
#Generate a 3rd graph
graph_3 = ggplot(data = dataset_final_new, aes(x = state, y = Renewables, col = state_category, label=state)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +geom_text(hjust=0, vjust=-0.5, size = 3) + theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + xlab("State") + ylab("Renewable Energy (% electricity generation)")
graph_3
###DOTPLOTS####
#Cleveland Dot Plot for graph 3
dot_plot =  ggplot(dataset_final_new, aes(x = Renewables, y = reorder (state, Renewables), col = state_category, label = state)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
ylab("State") + xlab("Renewable Energy (% electricity generation)") +
theme(legend.position = "none")
dot_plot
political_cat <- dataset_final_new$state[order(dataset_final_new$state_category, dataset_final_new$Renewables)]
dataset_final_new$state <- factor(dataset_final_new$state, levels = political_cat)
dot_plot_2 = ggplot(dataset_final_new, aes(x = Renewables, y = reorder (state, Renewables))) +
geom_point(size = 3, aes(colour = state_category)) +
scale_color_manual(values=c("blue", "purple", "red"), limits = c("Blue","Purple","Red")) +
facet_grid(state_category ~ ., scales = "free_y", space = "free_y") +
theme(legend.position = "none") +
ylab("State") + xlab("Renewable Energy (% Electricity Generation)")
dot_plot_2
###GRAPH 4####
#Create variables that are divided by state level GDP to control for differences in state size
dataset_final_new$Solar = as.numeric(dataset_final$Solar)
final_dataset = dataset_final_new |> mutate(new_solar = Solar/GDP)
final_dataset$new_solar = as.numeric(final_dataset$new_solar)
final_dataset$precip = as.numeric(final_dataset$precip)
#Generate a 4th graph
graph_4 = ggplot(data = final_dataset, aes(x = new_solar, y = precip, col = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) + xlim(0,1)
#Compare graphs 2.1 and 4
graph_4
graph_2.1
#Adjust variable names to be easier to work with
names(dataset_final_new)[names(dataset_final_new) == "Average Temperature (degrees Fahrenheit)"] <- "avg_temp"
###GRAPH 5####
#Create a 5th graph (removed outlier of Alaska here...no data available)
graph_5.0 = final_dataset |>
filter(state != "AK") |>
ggplot(aes(x = new_solar, y = avg_temp, col = state_category, label = state, group = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
geom_text(hjust=1, vjust=1.5, size = 3) +
ylab("Average Temperature") +
xlab("Solar Energy") + geom_smooth(method="lm", se = FALSE)
graph_5.0
#Log Solar variable for analysis purposes
final_dataset = final_dataset |>
mutate(log_solar = log(Solar))
#New graph with log of solar
graph_5.1 = final_dataset |>
filter(state != "AK") |>
ggplot(aes(x = log_solar, y = avg_temp, col = state_category, label = state, group = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
geom_text(hjust=0, vjust=-.75, size = 3) +
ylab("Average Temperature") +
xlab("Solar Energy") + geom_smooth(method="lm", se = FALSE)
graph_5.1
###GRAPHS 6, 6.0, 6.1####
#Change variable names and set as variables as numeric to work with them
names(final_dataset)[names(final_dataset) == "Carbon Dioxide (thousand metric tons)"] <- "co2_emissions"
final_dataset$co2_emissions =  as.numeric(final_dataset$co2_emissions)
names(final_dataset)[names(final_dataset) == "Civilian Labor Force (million)"] <- "labor_force"
final_dataset$labor_force =  as.numeric(final_dataset$labor_force)
#Create a 6th graph...see that Texas is by far the biggest polluter in the US
graph_6 = ggplot(data = final_dataset, aes(x = Renewables, y = co2_emissions, col = state_category, label = state, group = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
geom_text(hjust=1, vjust=1.5, size = 3) +
ylab("CO2 Emissions") +
xlab("Renewable Energy %")
graph_6
#If we adjust new graph for CO2 divided by state population below
final_dataset = final_dataset |> mutate(co2_pop = co2_emissions/labor_force)
#Create new graph.. see that there are 3 major polluters by capita in US
graph_6.0 = ggplot(data = final_dataset, aes(x = Renewables, y = co2_pop, col = state_category, label = state, group = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
geom_text(hjust=1, vjust=1.5, size = 3) +
ylab("CO2 Emissions") +
xlab("Renewable Energy %")
graph_6.0
#Adjust view on graph to see CO2 emissions and renewable energy percentage relationship in 47 states
graph_6.1 = ggplot(data = final_dataset, aes(x = Renewables, y = co2_pop, col = state_category, label = state, group = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
geom_text(hjust=1, vjust=1.5, size = 3) +
ylab("CO2 Emissions") +
xlab("Renewable Energy %") +ylim(0,30000) +
geom_smooth(method = "lm", se = FALSE)
graph_6.1
###Maps####
library(tigris)
library(raster)
library(tmap)
library(sf)
#Create Map showing political affiliation
states <- states(cb = TRUE)
names(states)[names(states) == "STUSPS"] <- "state"
map_1 <- left_join(final_dataset, states, by = "state")
map_1 <- st_as_sf(map_1)
final_map = map_1[-c(2), ]
final_map = final_map[-c(10), ]
affiliation_map <- tm_shape(final_map)+tm_polygons(col ="state_category", palette = c(Blue = "blue", Red = "red", Purple = "purple"), title = "Political Category")
affiliation_map
#Create map showing renewable energy percentage
energy_map = tm_shape(final_map)+tm_polygons(col ="Renewables", palette =c("Greens"), title = "Renewable Energy (%)")
energy_map
###Regressions####
library(estimatr)
library(fixest)
library(modelsummary)
final_dataset$GDP =  as.numeric(final_dataset$GDP)
final_dataset$avg_temp =  as.numeric(final_dataset$avg_temp)
final_dataset$Renewables =  as.numeric(final_dataset$Renewables)
final_dataset$precip =  as.numeric(dataset_final_new$precip)
final_dataset <- rename(final_dataset, rep_gov = "republican governor")
reg_1 = feols(Renewables ~ avg_temp + GDP + precip, data = final_dataset)
summary(reg_1)
reg_2 = feols(Renewables ~ avg_temp + GDP + precip + state_category, data = final_dataset)
summary(reg_2)
reg_3 = feols(Renewables ~ avg_temp + GDP + precip + co2_pop + trump_vote * rep_gov, data = final_dataset)
summary(reg_3)
summary(reg_3) |> tidy()
reg_4 = feols(co2_pop ~ avg_temp + GDP + precip + Renewables + trump_vote * rep_gov, data = final_dataset)
summary(reg_4)
summary(reg_4) |> tidy()
etable(reg_1,reg_2)
###GRAPH 5####
#Create a 5th graph (removed outlier of Alaska here...no data available)
final_dataset[11,6] = 75
#Above I added average temperature in Hawaii from NOAA since it was only missing value in my data. Not the best practice but important in this context.
graph_5.0 = final_dataset |>
filter(state != "AK") |>
ggplot(aes(x = new_solar, y = avg_temp, col = state_category, label = state, group = state_category)) +
geom_point() + scale_color_manual(values=c("blue", "purple", "red")) +
geom_text(hjust=1, vjust=1.5, size = 3) +
ylab("Average Temperature") +
xlab("Solar Energy") + geom_smooth(method="lm", se = FALSE)
graph_5.0
#Save Files for Presentation
setwd("/Users/nathanbush/Documents/GitHub/Data Analytics Term Project")
ggsave(
filename = "graph_5.0.png",
plot = graph_5.0)
save(graph_5.0, file = "graph_5.0.Rdata")
#Save Files for Presentation
setwd("/Users/nathanbush/Documents/GitHub/Data Analytics Term Project/Relevant Files")
save(graph_5.0, file = "graph_5.0.Rdata")
etable(reg_1,reg_2)
reg = etable(reg_1,reg_2)
save(reg, file = "reg.png")
etable(reg_1,reg_2, reg_3)
options(htmltools.dir.version = FALSE)
library(knitr)
knitr::opts_chunk$set(
fig.align = "center",
cache = T,
dpi = 300
)
opts_knit$set(root.dir = "/Users/nathanbush/Documents/GitHub/Data Analytics Term Project")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_5.0.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/energy_map.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/affiliation_map.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.0.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.0.1.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dot_plot.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dot_plot_2.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_1_color.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/etable.png")
options(htmltools.dir.version = FALSE)
library(knitr)
knitr::opts_chunk$set(
fig.align = "center",
cache = T,
dpi = 300
)
opts_knit$set(root.dir = "/Users/nathanbush/Documents/GitHub/Data Analytics Term Project")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_5.0.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/energy_map.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/affiliation_map.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.0.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.0.1.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dot_plot.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dot_plot_2.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_1_color.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/etable.png")
options(htmltools.dir.version = FALSE)
library(knitr)
knitr::opts_chunk$set(
fig.align = "center",
cache = T,
dpi = 300
)
opts_knit$set(root.dir = "/Users/nathanbush/Documents/GitHub/Data Analytics Term Project")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_5.0.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/energy_map.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/affiliation_map.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.0.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.0.1.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dot_plot.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dot_plot_2.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_1_color.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/etable.png")
options(htmltools.dir.version = FALSE)
library(knitr)
knitr::opts_chunk$set(
fig.align = "center",
cache = T,
dpi = 300
)
opts_knit$set(root.dir = "/Users/nathanbush/Documents/GitHub/Data Analytics Term Project")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_5.0.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/energy_map.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/affiliation_map.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.0.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.0.1.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dot_plot.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dot_plot_2.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_1_color.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/etable.png")
options(htmltools.dir.version = FALSE)
library(knitr)
knitr::opts_chunk$set(
fig.align = "center",
cache = T,
dpi = 300
)
opts_knit$set(root.dir = "/Users/nathanbush/Documents/GitHub/Data Analytics Term Project")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_5.0.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/energy_map.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/affiliation_map.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.0.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.0.1.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dot_plot.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dot_plot_2.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_1_color.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/etable.jpg")
options(htmltools.dir.version = FALSE)
library(knitr)
knitr::opts_chunk$set(
fig.align = "center",
cache = T,
dpi = 300
)
opts_knit$set(root.dir = "/Users/nathanbush/Documents/GitHub/Data Analytics Term Project")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_5.0.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/energy_map.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/affiliation_map.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.0.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_6.0.1.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dot_plot.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/dot_plot_2.Rdata")
load("~/Documents/GitHub/Data Analytics Term Project/Relevant Files/graph_1_color.Rdata")
library(ggplot2)
ggsave(
filename = "graph_5.0.png",
plot = graph_5.0)
ggsave(
filename = "graph_6.png",
plot = graph_6)
ggsave(
filename = "graph_6.0.png",
plot = graph_6.0)
ggsave(
filename = "graph_6.0.1.png",
plot = graph_6.0.1)
ggsave(
filename = "dot_plot.png",
plot = dot_plot)
ggsave(
filename = "dot_plot_2.png",
plot = dot_plot_2)
ggsave(
filename = "graph_1_color.png",
plot = graph_1_color)
include_graphics("graph_5.0.png")
```
include_graphics("etable.jpg")
include_graphics("etable.png")
include_graphics("etable.jpg")
#1
vector_1 = c(35, 88, 42, 84, 81, 50)
vector_2 = (vector_1-min(vector_1))
vector_2[3:5]
mean(vector_2[4:6])
vector_2[c(4,5,6)]
mean(vector_2[c(4,5,6)])
#2
matrix1data = c(seq(0,3,1), seq(0,6,2), seq(0,9,3), seq(0,12,4), seq(0,15,5))
matrix1data
matrix1 = matrix(data = matrix1data,5,4, byrow = TRUE)
?t()
matrix1_t = t(matrix1)
new_matrix= matrix(matrix1[,3:4],5,2)
new_matrix_t= t(new_matrix)
sixmatrix= ifelse(new_matrix_t==6,6,NA)
sixmatrix[2,2] + sixmatrix[1,3]
sixmatrix= ifelse(new_matrix_t==6,6,NA)
unique(sixmatrix)
unique(new_matrix)
sixmatrix= ifelse(new_matrix_t==6,6,NA)
unique(new_matrix)
count(sixmatrix)
unique(six_matrix)
unique(six_matrix)
sixmatrix= ifelse(new_matrix_t==6,6,NA)
unique(six_matrix)
unique(sixmatrix)
